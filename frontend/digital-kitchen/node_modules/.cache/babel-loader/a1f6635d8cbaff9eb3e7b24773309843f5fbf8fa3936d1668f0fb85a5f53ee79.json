{"ast":null,"code":"var _jsxFileName = \"C:\\\\code\\\\digitalkitchen\\\\frontend\\\\digital-kitchen\\\\src\\\\components\\\\forms\\\\MultiStepForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport RecipeForm from './RecipeForm';\nimport IngredientForm from './IngredientForm';\nimport StepsForm from './StepsForm';\nimport TagsForm from './TagsForm';\nimport '../../styles/MultiStepForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MultiStepForm = () => {\n  _s();\n  const [step, setStep] = useState(1);\n  const [formData, setFormData] = useState({\n    tags: []\n  });\n  const [isFormFilled, setIsFormFilled] = useState(false);\n  const handleNextStep = data => {\n    setFormData(formData);\n    setStep(prevStep => prevStep + 1);\n  };\n  const handlePrevStep = () => {\n    setStep(prevStep => prevStep - 1);\n  };\n  const handleMasterSubmit = () => {\n    console.log('Submitted Data:', formData);\n    // Make an HTTP request to send the form data to the backend\n    // ...\n  };\n\n  const handleFormCompletion = isComplete => {\n    setIsFormFilled(isComplete);\n  };\n  const renderFormStep = () => {\n    switch (step) {\n      case 1:\n        return /*#__PURE__*/_jsxDEV(RecipeForm, {\n          onNextStep: handleNextStep,\n          formData: formData,\n          setFormData: setFormData,\n          onFormCompletion: handleFormCompletion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this);\n      case 2:\n        return /*#__PURE__*/_jsxDEV(IngredientForm, {\n          onNextStep: handleNextStep,\n          onPrevStep: handlePrevStep,\n          formData: formData,\n          setFormData: setFormData,\n          onFormCompletion: handleFormCompletion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this);\n      case 3:\n        return /*#__PURE__*/_jsxDEV(StepsForm, {\n          onNextStep: handleNextStep,\n          onPrevStep: handlePrevStep,\n          formData: formData,\n          setFormData: setFormData,\n          onFormCompletion: handleFormCompletion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this);\n      case 4:\n        return /*#__PURE__*/_jsxDEV(TagsForm, {\n          onPrevStep: handlePrevStep,\n          formData: formData,\n          setFormData: setFormData,\n          onFormCompletion: handleFormCompletion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  const isRequiredFieldsFilled = () => {\n    // Check if the required fields in the current step are filled out\n    switch (step) {\n      case 1:\n        // Check if the required fields in the RecipeForm are filled out\n        const {\n          name,\n          description,\n          servings,\n          caloriesPerServing\n        } = formData.recipe;\n        return name && description && servings && caloriesPerServing;\n      case 2:\n        // Check if the required fields in the IngredientForm are filled out\n        const {\n          ingredients\n        } = formData;\n        return ingredients && ingredients.length > 0;\n      case 3:\n        // Check if the required fields in the StepsForm are filled out\n        const {\n          steps\n        } = formData;\n        return steps && steps.length > 0;\n      case 4:\n        // Check if the required fields in the TagsForm are filled out\n        const {\n          tags\n        } = formData;\n        return tags && tags.length > 0;\n      default:\n        return false;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [renderFormStep(), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [step > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrevStep,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), step < 4 && isRequiredFieldsFilled() ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleNextStep({}),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), step === 4 && isFormFilled && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleMasterSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(MultiStepForm, \"OFMqKg0mE2P78DnUUU2BZ4Q2AMo=\");\n_c = MultiStepForm;\nexport default MultiStepForm;\nvar _c;\n$RefreshReg$(_c, \"MultiStepForm\");","map":{"version":3,"names":["React","useState","RecipeForm","IngredientForm","StepsForm","TagsForm","jsxDEV","_jsxDEV","MultiStepForm","_s","step","setStep","formData","setFormData","tags","isFormFilled","setIsFormFilled","handleNextStep","data","prevStep","handlePrevStep","handleMasterSubmit","console","log","handleFormCompletion","isComplete","renderFormStep","onNextStep","onFormCompletion","fileName","_jsxFileName","lineNumber","columnNumber","onPrevStep","isRequiredFieldsFilled","name","description","servings","caloriesPerServing","recipe","ingredients","length","steps","children","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/code/digitalkitchen/frontend/digital-kitchen/src/components/forms/MultiStepForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport RecipeForm from './RecipeForm';\r\nimport IngredientForm from './IngredientForm';\r\nimport StepsForm from './StepsForm';\r\nimport TagsForm from './TagsForm';\r\nimport '../../styles/MultiStepForm.css'; \r\n\r\nconst MultiStepForm = () => {\r\n  const [step, setStep] = useState(1);\r\n  const [formData, setFormData] = useState({ tags: [] });\r\n  const [isFormFilled, setIsFormFilled] = useState(false);\r\n\r\n  const handleNextStep = (data) => {\r\n    setFormData(formData);\r\n    setStep((prevStep) => prevStep + 1);\r\n  };\r\n  \r\n  const handlePrevStep = () => {\r\n    setStep((prevStep) => prevStep - 1);\r\n  };\r\n\r\n  const handleMasterSubmit = () => {\r\n    console.log('Submitted Data:', formData);\r\n    // Make an HTTP request to send the form data to the backend\r\n    // ...\r\n  };\r\n\r\n  const handleFormCompletion = (isComplete) => {\r\n    setIsFormFilled(isComplete);\r\n  };\r\n\r\n  const renderFormStep = () => {\r\n    switch (step) {\r\n      case 1:\r\n        return (\r\n          <RecipeForm \r\n            onNextStep={handleNextStep} \r\n            formData={formData} \r\n            setFormData={setFormData} \r\n            onFormCompletion={handleFormCompletion}\r\n          />\r\n        );\r\n      case 2:\r\n        return (\r\n          <IngredientForm\r\n            onNextStep={handleNextStep}\r\n            onPrevStep={handlePrevStep}\r\n            formData={formData}\r\n            setFormData={setFormData}\r\n            onFormCompletion={handleFormCompletion}\r\n          />\r\n        );\r\n      case 3:\r\n        return (\r\n          <StepsForm\r\n            onNextStep={handleNextStep}\r\n            onPrevStep={handlePrevStep}\r\n            formData={formData}\r\n            setFormData={setFormData}\r\n            onFormCompletion={handleFormCompletion}\r\n          />\r\n        );\r\n      case 4:\r\n        return (\r\n          <TagsForm\r\n            onPrevStep={handlePrevStep}\r\n            formData={formData}\r\n            setFormData={setFormData}\r\n            onFormCompletion={handleFormCompletion}\r\n          />\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const isRequiredFieldsFilled = () => {\r\n    // Check if the required fields in the current step are filled out\r\n    switch (step) {\r\n      case 1:\r\n        // Check if the required fields in the RecipeForm are filled out\r\n        const { name, description, servings, caloriesPerServing } = formData.recipe;\r\n        return name && description && servings && caloriesPerServing;\r\n      case 2:\r\n        // Check if the required fields in the IngredientForm are filled out\r\n        const { ingredients } = formData;\r\n        return ingredients && ingredients.length > 0;\r\n      case 3:\r\n        // Check if the required fields in the StepsForm are filled out\r\n        const { steps } = formData;\r\n        return steps && steps.length > 0;\r\n      case 4:\r\n        // Check if the required fields in the TagsForm are filled out\r\n        const { tags } = formData;\r\n        return tags && tags.length > 0;\r\n      default:\r\n        return false;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {renderFormStep()}\r\n      <div>\r\n        {step > 1 && (\r\n          <button onClick={handlePrevStep}>Previous</button>\r\n        )}\r\n        {step < 4 && isRequiredFieldsFilled() ? (\r\n          <button onClick={() => handleNextStep({})}>Next</button>\r\n        ) : (\r\n          <button disabled>Next</button>\r\n        )}\r\n        {step === 4 && isFormFilled && (\r\n          <button onClick={handleMasterSubmit}>Submit</button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MultiStepForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}