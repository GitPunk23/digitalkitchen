{"ast":null,"code":"var _jsxFileName = \"C:\\\\code\\\\digitalkitchen\\\\frontend\\\\digital-kitchen\\\\src\\\\components\\\\forms\\\\multi.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap';\nimport RecipeForm from './Recipe';\nimport IngredientForm from './ingredients';\nimport StepsForm from './steps';\nimport TagsForm from './tags';\nimport '../../styles/MultiStepForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MultiStepForm = () => {\n  _s();\n  const [step, setStep] = useState(1);\n  const [formData, setFormData] = useState({\n    tags: []\n  });\n  const handleNextStep = data => {\n    setFormData(formData);\n    setStep(prevStep => prevStep + 1);\n  };\n  const handlePrevStep = () => {\n    setStep(prevStep => prevStep - 1);\n  };\n  const handleMasterSubmit = () => {\n    console.log('Submitted Data:', formData);\n\n    // Make an HTTP request to send the form data to the backend\n    fetch('http://localhost:8080/digitalkitchen/recipes/createRecipe', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    }).then(response => response.json()).then(data => {\n      console.log('Response from Backend:', data);\n      // Handle the response from the backend if needed\n    }).catch(error => {\n      console.error('Error:', error);\n      // Handle errors if any\n    });\n  };\n\n  const renderFormStep = () => {\n    switch (step) {\n      case 1:\n        return /*#__PURE__*/_jsxDEV(RecipeForm, {\n          onNextStep: handleNextStep,\n          formData: formData,\n          setFormData: setFormData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this);\n      case 2:\n        return /*#__PURE__*/_jsxDEV(IngredientForm, {\n          onNextStep: handleNextStep,\n          onPrevStep: handlePrevStep,\n          formData: formData,\n          setFormData: setFormData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this);\n      case 3:\n        return /*#__PURE__*/_jsxDEV(StepsForm, {\n          onNextStep: handleNextStep,\n          onPrevStep: handlePrevStep,\n          formData: formData,\n          setFormData: setFormData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this);\n      case 4:\n        return /*#__PURE__*/_jsxDEV(TagsForm, {\n          onPrevStep: handlePrevStep,\n          formData: formData,\n          setFormData: setFormData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"row\", {\n    children: [renderFormStep(), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [step > 1 && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handlePrevStep,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), step < 4 && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleNextStep({}),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), \" I have more recipes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleMasterSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(MultiStepForm, \"eVBnUbjb6vksFtzWjsAV5d0/r9s=\");\n_c = MultiStepForm;\nexport default MultiStepForm;\nvar _c;\n$RefreshReg$(_c, \"MultiStepForm\");","map":{"version":3,"names":["React","useState","Button","RecipeForm","IngredientForm","StepsForm","TagsForm","jsxDEV","_jsxDEV","MultiStepForm","_s","step","setStep","formData","setFormData","tags","handleNextStep","data","prevStep","handlePrevStep","handleMasterSubmit","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","catch","error","renderFormStep","onNextStep","fileName","_jsxFileName","lineNumber","columnNumber","onPrevStep","children","onClick","type","_c","$RefreshReg$"],"sources":["C:/code/digitalkitchen/frontend/digital-kitchen/src/components/forms/multi.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap';\r\nimport RecipeForm from './Recipe';\r\nimport IngredientForm from './ingredients';\r\nimport StepsForm from './steps';\r\nimport TagsForm from './tags';\r\nimport '../../styles/MultiStepForm.css';\r\n\r\nconst MultiStepForm = () => {\r\n  const [step, setStep] = useState(1);\r\n  const [formData, setFormData] = useState({ tags: [] });\r\n\r\n  const handleNextStep = (data) => {\r\n    setFormData(formData);\r\n    setStep((prevStep) => prevStep + 1);\r\n  };\r\n\r\n  const handlePrevStep = () => {\r\n    setStep((prevStep) => prevStep - 1);\r\n  };\r\n\r\n  const handleMasterSubmit = () => {\r\n    console.log('Submitted Data:', formData);\r\n\r\n    // Make an HTTP request to send the form data to the backend\r\n    fetch('http://localhost:8080/digitalkitchen/recipes/createRecipe', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(formData),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log('Response from Backend:', data);\r\n        // Handle the response from the backend if needed\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n        // Handle errors if any\r\n      });\r\n  };\r\n\r\n  const renderFormStep = () => {\r\n    switch (step) {\r\n      case 1:\r\n        return (\r\n          <RecipeForm\r\n            onNextStep={handleNextStep}\r\n            formData={formData}\r\n            setFormData={setFormData}\r\n          />\r\n        );\r\n      case 2:\r\n        return (\r\n          <IngredientForm\r\n            onNextStep={handleNextStep}\r\n            onPrevStep={handlePrevStep}\r\n            formData={formData}\r\n            setFormData={setFormData}\r\n          />\r\n        );\r\n      case 3:\r\n        return (\r\n          <StepsForm\r\n            onNextStep={handleNextStep}\r\n            onPrevStep={handlePrevStep}\r\n            formData={formData}\r\n            setFormData={setFormData}\r\n          />\r\n        );\r\n      case 4:\r\n        return (\r\n          <TagsForm\r\n            onPrevStep={handlePrevStep}\r\n            formData={formData}\r\n            setFormData={setFormData}\r\n          />\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <row>\r\n      {renderFormStep()}\r\n      <div>\r\n        {step > 1 && (\r\n          <Button onClick={handlePrevStep}>Previous</Button>\r\n        )}\r\n        {step < 4 && (\r\n          <Button onClick={() => handleNextStep({})}>Next</Button>\r\n        )}\r\n        </div>\r\n        <div>\r\n            <label>\r\n                <input type=\"checkbox\" /> I have more recipes\r\n            </label>\r\n            <Button onClick={handleMasterSubmit}>Submit</Button>\r\n        </div>\r\n    </row>\r\n  );\r\n  \r\n};\r\n\r\nexport default MultiStepForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}