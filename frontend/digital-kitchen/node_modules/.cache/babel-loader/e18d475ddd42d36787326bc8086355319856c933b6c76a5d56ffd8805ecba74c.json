{"ast":null,"code":"var _jsxFileName = \"C:\\\\code\\\\digitalkitchen\\\\frontend\\\\digital-kitchen\\\\src\\\\components\\\\pages\\\\SearchPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SearchBar from '../SearchBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchPage = () => {\n  _s();\n  const [searchType, setSearchType] = useState('recipes');\n  const [name, setName] = useState('');\n  const [ingredients, setIngredients] = useState([]);\n  const [authors, setAuthors] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [minServings, setMinServings] = useState('');\n  const [maxServings, setMaxServings] = useState('');\n  const [minCalories, setMinCalories] = useState('');\n  const [maxCalories, setMaxCalories] = useState('');\n  const [tags, setTags] = useState([]);\n  const handleSearchTypeChange = event => {\n    setSearchType(event.target.value);\n  };\n  const handleNameChange = event => {\n    setName(event.target.value);\n  };\n  const handleIngredientInputChange = event => {\n    // Function call to get ingredient names based on user input\n    // Implement the function to fetch ingredient names from the backend\n    // and set the suggestions in the component state\n    // For example:\n    // fetchIngredientNames(event.target.value)\n    //   .then((response) => {\n    //     setIngredientSuggestions(response.data);\n    //   })\n    //   .catch((error) => {\n    //     console.error('Error fetching ingredient names:', error);\n    //   });\n  };\n  const handleIngredientAdd = event => {\n    if (event.key === 'Enter' || event.key === ',') {\n      const newIngredient = event.target.value.trim();\n      if (newIngredient !== '' && !ingredients.includes(newIngredient)) {\n        setIngredients([...ingredients, newIngredient]);\n        event.target.value = '';\n      }\n    }\n  };\n  const handleAuthorAdd = event => {\n    const newAuthor = event.target.value.trim();\n    if (newAuthor !== '' && !authors.includes(newAuthor)) {\n      setAuthors([...authors, newAuthor]);\n      event.target.value = '';\n    }\n  };\n  const handleCategoryAdd = event => {\n    const newCategory = event.target.value.trim();\n    if (newCategory !== '' && !categories.includes(newCategory)) {\n      setCategories([...categories, newCategory]);\n      event.target.value = '';\n    }\n  };\n  const handleTagAdd = event => {\n    const newTag = event.target.value.trim();\n    if (newTag !== '' && !tags.includes(newTag)) {\n      setTags([...tags, newTag]);\n      event.target.value = '';\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    // Prepare the search criteria JSON object\n    const searchCriteria = {\n      name: name,\n      authors: authors,\n      categories: categories,\n      minServings: minServings,\n      maxServings: maxServings,\n      minCalories: minCalories,\n      maxCalories: maxCalories,\n      ingredients: ingredients,\n      tags: tags\n    };\n\n    // Submit the search criteria to the backend\n    // Implement the function to send the search criteria JSON object to the backend\n    // For example:\n    // submitSearchCriteria(searchCriteria)\n    //   .then((response) => {\n    //     // Process the search results returned by the backend\n    //   })\n    //   .catch((error) => {\n    //     console.error('Error submitting search criteria:', error);\n    //   });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchPage, \"4Kp1ySjkh5lfh6YG8b4UaTN5nGc=\");\n_c = SearchPage;\nexport default SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","SearchBar","jsxDEV","_jsxDEV","SearchPage","_s","searchType","setSearchType","name","setName","ingredients","setIngredients","authors","setAuthors","categories","setCategories","minServings","setMinServings","maxServings","setMaxServings","minCalories","setMinCalories","maxCalories","setMaxCalories","tags","setTags","handleSearchTypeChange","event","target","value","handleNameChange","handleIngredientInputChange","handleIngredientAdd","key","newIngredient","trim","includes","handleAuthorAdd","newAuthor","handleCategoryAdd","newCategory","handleTagAdd","newTag","handleSubmit","preventDefault","searchCriteria","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/code/digitalkitchen/frontend/digital-kitchen/src/components/pages/SearchPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport SearchBar from '../SearchBar';\r\n\r\nconst SearchPage = () => {\r\n  const [searchType, setSearchType] = useState('recipes');\r\n  const [name, setName] = useState('');\r\n  const [ingredients, setIngredients] = useState([]);\r\n  const [authors, setAuthors] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [minServings, setMinServings] = useState('');\r\n  const [maxServings, setMaxServings] = useState('');\r\n  const [minCalories, setMinCalories] = useState('');\r\n  const [maxCalories, setMaxCalories] = useState('');\r\n  const [tags, setTags] = useState([]);\r\n\r\n  const handleSearchTypeChange = (event) => {\r\n    setSearchType(event.target.value);\r\n  };\r\n\r\n  const handleNameChange = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleIngredientInputChange = (event) => {\r\n    // Function call to get ingredient names based on user input\r\n    // Implement the function to fetch ingredient names from the backend\r\n    // and set the suggestions in the component state\r\n    // For example:\r\n    // fetchIngredientNames(event.target.value)\r\n    //   .then((response) => {\r\n    //     setIngredientSuggestions(response.data);\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.error('Error fetching ingredient names:', error);\r\n    //   });\r\n  };\r\n\r\n  const handleIngredientAdd = (event) => {\r\n    if (event.key === 'Enter' || event.key === ',') {\r\n      const newIngredient = event.target.value.trim();\r\n      if (newIngredient !== '' && !ingredients.includes(newIngredient)) {\r\n        setIngredients([...ingredients, newIngredient]);\r\n        event.target.value = '';\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleAuthorAdd = (event) => {\r\n    const newAuthor = event.target.value.trim();\r\n    if (newAuthor !== '' && !authors.includes(newAuthor)) {\r\n      setAuthors([...authors, newAuthor]);\r\n      event.target.value = '';\r\n    }\r\n  };\r\n\r\n  const handleCategoryAdd = (event) => {\r\n    const newCategory = event.target.value.trim();\r\n    if (newCategory !== '' && !categories.includes(newCategory)) {\r\n      setCategories([...categories, newCategory]);\r\n      event.target.value = '';\r\n    }\r\n  };\r\n\r\n  const handleTagAdd = (event) => {\r\n    const newTag = event.target.value.trim();\r\n    if (newTag !== '' && !tags.includes(newTag)) {\r\n      setTags([...tags, newTag]);\r\n      event.target.value = '';\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    // Prepare the search criteria JSON object\r\n    const searchCriteria = {\r\n      name: name,\r\n      authors: authors,\r\n      categories: categories,\r\n      minServings: minServings,\r\n      maxServings: maxServings,\r\n      minCalories: minCalories,\r\n      maxCalories: maxCalories,\r\n      ingredients: ingredients,\r\n      tags: tags,\r\n    };\r\n\r\n    // Submit the search criteria to the backend\r\n    // Implement the function to send the search criteria JSON object to the backend\r\n    // For example:\r\n    // submitSearchCriteria(searchCriteria)\r\n    //   .then((response) => {\r\n    //     // Process the search results returned by the backend\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.error('Error submitting search criteria:', error);\r\n    //   });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SearchBar />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}